class RandomizedSet {
public:
    unordered_map<int,int>m;
    vector<int>v;
    RandomizedSet() {
    
    }
    
    bool insert(int val) {
        if(m.find(val) != m.end()){
            return false;
        }
        int idx = v.size();
        m[val] = idx;
        v.push_back(val);
        return true;
    }
    
    bool remove(int val) {
        if(m.find(val) == m.end()){
            return false;
        }

        int idx = m[val];
        int last = v.size()-1;
        int lastEle = v[last];
        swap(v[idx] , v[last]);
        v.pop_back();

        m.erase(val);
        if(idx != last){
            m[lastEle] = idx;
        }
        return true;

    }
    
    int getRandom() {
        int idx = rand() % v.size();
        return v[idx];
    }
};

/**
 * Your RandomizedSet object will be instantiated and called as such:
 * RandomizedSet* obj = new RandomizedSet();
 * bool param_1 = obj->insert(val);
 * bool param_2 = obj->remove(val);
 * int param_3 = obj->getRandom();
 */
